name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment
        description: Target environment

env:
  PROJECT: crypto-price-prediction
  ROLE_NAME: tf-deploy-role

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.7.9"
          enable-cache: true # Reduces time to install dependencies

      - name: Set up Python
        run: uv python install # Automatically detects the Python version pinned in the project

      - name: Install Dependencies
        run: uv sync --locked --all-extras

      - name: Execute lint (isort)
        run: uv run isort --check-only --diff app/ tests/

      - name: Execute lint (flake8)
        run: uv run flake8 app/ tests/

      - name: Execute type check
        run: uv run mypy app/ tests/

      - name: Execute tests
        run: uv run pytest

  deploy:
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">=1.10.1 <1.11"

      - name: Configure credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
          role-session-name: GitHub_to_AWS_via_Federated_OIDC
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform Deploy
        run: |
          echo "Initializing terraform backend..."
          terraform -chdir=infra init \
            -backend-config="bucket=${{ vars.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="region=${{ vars.AWS_REGION }}" \
            -backend-config="key=${{ env.PROJECT }}/${{ inputs.environment }}/terraform.tfstate" \
            -backend-config="use_lockfile=true"

          echo "Executing terraform plan..."
          terraform -chdir=infra plan -out=tfplan

          echo "Executing terraform apply..."
          terraform -chdir=infra apply -auto-approve tfplan
